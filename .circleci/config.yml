version: 2
workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore: master
      - master:
          filters:
            branches:
              only: master

# This key means nothing to CircleCI; it's just a place to keep anchored
# configuration nodes for reuse.
common_settings:
  docker: &docker_setup
    - image: 'circleci/node:8.11.2-browsers'
  # Cache a bunch of stuff
  # - npm's local tarball cache
  save_cache: &savecache
    paths:
      - ~/.ssh
      - ~/.npm
      - /root/.npm
    key: 'v3-npm-cache-{{ checksum "package-lock.json" }}'

  install_latest_npm: &install_latest_npm
    name: Ensure NPM is up to date
    command: sudo npm install -g npm@latest

  install_packages: &install_packages
    name: Install NPM packages from lockfile
    command: npm ci --ignore-scripts && npx lerna bootstrap --hoist --no-ci

  full_build: &full_build
    name: Full Build
    command: 'cp packages/venia-concept/example.env packages/venia-concept/.env && npm run build && npm run clean:dist'

  test_result_path: &test_result_path
    path: "test-results"

jobs:
  master:
    docker: *docker_setup
    steps:
      - checkout
      - run: *install_latest_npm
      - run: *install_packages
      - run:
          name: Test Suites
          command: 'npm run test:ci'
      - run:
          name: Coveralls Coverage Analysis
          command: npm run coveralls
      - run: *full_build
      # create webdriver logs manually, or we get an error
      - run:
          name: preparing for e2e tests execution
          command: 'npm run test:ci:e2e:prepare'
      # e2e update
      - run:
          name: Update webdriver-manager locally
          command: 'npm run test:ci:e2e:update:chrome'
      # e2e start chrome
      - run:
          name: Update webdriver-manager locally
          command: 'npm run test:ci:e2e:start:chrome'
          background: true

        - run: sleep 5 # delay for 5 seconds since webdriver starting soo long
        - run: # run tests
            name: ci test
            command: npm run test:ci:e2e

        - run: # generate static documentation
            name: ci test
            command: npm run test:ci:e2e:generate:docs

      - store_artifacts: # store html resporter after e2e test execution
          path: packages/pwa-e2e/reports/report

      - store_test_results: *test_result_path
      - store_artifacts: *test_result_path

  build:
    docker: *docker_setup
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'v3-npm-cache-{{ checksum "package-lock.json" }}'
      - run: *install_latest_npm
      - run: *install_packages
      - save_cache: *savecache
      - run:
          name: Test Suites and Coverage
          # Test failures should not stop Danger, so hide the exit code.
          command: 'npm run test:ci && npm run coveralls || true'
      - run: *full_build
      - run:
          name: Patch CircleCI environment to help detect pull requests
          command: chmod u+x scripts/patch_circleci_env && scripts/patch_circleci_env >> $BASH_ENV
          environment:
            GITHUB_GRAPHQL_ENDPOINT: https://api.github.com/graphql
      - run:
          name: DangerCI
          command: npm run danger

      - store_test_results: *test_result_path
      - store_artifacts: *test_result_path


